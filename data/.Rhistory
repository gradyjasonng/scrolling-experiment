stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
View(df)
#RT by trial
ggplot(df%>% filter(friction == "Native"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "Smooth"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "High"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "Low"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df , aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "Low"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "Low"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=mean, geom="line")
#RT by trial
ggplot(df %>% filter(friction == "Low"), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_point()
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_point(color = metaphor)
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_point(aes(color = metaphor))
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_point(aes(color = metaphor),alpha = 0.3)
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3)
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.4)
#RT by trial
ggplot(df, aes(as.character(trial), RT, fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)
#RT by trial
ggplot(df, aes(as.character(trial), log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)
#RT by trial
ggplot(df, aes(as.character(trial), log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth()
#RT by trial
ggplot(df, aes(as.character(trial), log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
lm(RT ~ trial, df)
summary(lm(RT ~ trial, df))
summary(lm(RT ~ trial*metaphor, df))
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
#raw RT by metaphor
ggplot(df, aes(metaphor, RT, fill= metaphor)) + geom_boxplot(width = 0.4) +
coord_cartesian(ylim = ylim1) +
stat_summary(fun.y=mean, geom="point", shape=1, size=1, color="black", fill="black") +
geom_text(data = aggregate(RT ~ metaphor, df, median) %>% mutate(RT = round(RT,1)), aes(label = RT, y = RT), nudge_y = 3) +
geom_text(data = aggregate(RT~ metaphor, df, function(x) paste(sum(!between(x, ylim1[1], ylim1[2])), "outliers\nnot shown")),
aes(label = RT, y = 140), nudge_x = 0.25) +
geom_text(data = aggregate(RT~ metaphor, df, function(x) paste("n =", length(x))), aes(label = RT, y = 0))
#fitted against residuals
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals", col = "grey")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)))
plot_model(m, type = "eff", terms = c("friction","metaphor"), ci.lvl = 0.95, order.terms = c(3,1,2)
) + coord_cartesian(ylim = c(0,60)) + geom_line()
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
#compare RTs across blocks
ggplot(df , aes(block, RT)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = friction)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT)) +
stat_summary(aes(group=metaphor, colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT)) +
stat_summary(aes(group = 1,colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = order)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + order + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1
summary(m)
Anova(m)
#log RT by friction
ggplot(df, aes(friction, log(RT), fill= friction)) + geom_boxplot(width = 0.4) +
stat_summary(fun.y=mean, geom="point", shape=1, size=1, color="black", fill="black")
ggplot(df, aes(RT, group = mTurkCode)) + geom_density()
ggplot(df, aes(RT, group = mTurkCode)) + geom_density(alpha = 0.2)
ggplot(df, aes(RT, group = mTurkCode)) + geom_density(alpha = 0.2) +  coord_cartesian(xlim = c(0,200))
ggplot(df, aes(RT)) + geom_density(alpha = 0.2) +  coord_cartesian(xlim = c(0,200))
ggplot(df, aes(RT)) + geom_density(alpha = 0.2) +  coord_cartesian(xlim = c(0,300))
ggplot(df, aes(RT)) + geom_density(alpha = 0.2)
#mean vs median rt
df %>% summarize(meanRT = mean(RT), medianRT = median(RT))
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor))
#Plot distance by group
ggplot(df, aes(friction, distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, log(1+distance), fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls))) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
geom_boxplot(show.legend = F)
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
#Plot distance by group
ggplot(df, aes(friction, distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
geom_boxplot(show.legend = T)
#Plot distance by group
ggplot(df, aes(friction, distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, log(distance), fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, 1/distance, fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor)) +
coord_cartesian(ylim = c(0,300000))
#Plot distance by group
ggplot(df, aes(friction, log(1+distance), fill = metaphor)) +
geom_boxplot(show.legend = F) +
facet_grid(cols = vars(metaphor))
#Plot scrolls by group
ggplot(df, aes(friction, log(1+scrolls), fill = metaphor)) +
geom_boxplot(show.legend = T)
#compare RTs across blocks
ggplot(df , aes(block, RT, group = order)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare native RTs by order of presentation
ggplot(df %>% filter(friction == "Native"), aes(block, log(RT), fill = metaphor)) + geom_boxplot()
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
#compare RTs across blocks
ggplot(df , aes(block, RT, group = order)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = order)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = friction)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = metaphor)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, color = metaphor)) +
stat_summary(aes(colour = order), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, color = metaphor)) +
stat_summary(aes(colour = metaphor), fun.y=median, geom="line")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = metaphor)) +
stat_summary(aes(colour = metaphor), fun.y=median, geom="line")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
ggplot(df, aes(RT)) +  geom_density() +
geom_line(aes(x=df$RT, y=dnorm(df$RT, normFit$estimate["mean"], normFit$estimate["sd"])), color="red", size = 0.9, alpha = 0.6) +
#geom_line(aes(x=df$RT, y=dlnorm(df$RT, lnormFit$estimate["meanlog"], lnormFit$estimate["sdlog"])), color="red", size = 0.8, alpha = 0.6) +
geom_line(aes(x=df$RT, y=dgamma(df$RT,gammaFit$estimate["shape"], gammaFit$estimate["rate"])), color="blue", size = 0.9, alpha = 0.6) +
coord_cartesian(ylim = c(0,0.03), xlim = c(0,200))
ggsave("plots/distr-comparison.png", width = 5, height = 5, units ="in", bg = 'transparent')
df$mTurkCode
typeof(df$mTurkCode)
m2 <- glmer(distance ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m2 <- glmer(RT ~  friction*metaphor*trialScaled + charsBeforeTargetscaled  + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m2
m1
m1
m0
m1
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1
m2
Anova(m2)
summary(gammaFit)
m2 <- glmer(RT ~  friction*metaphor*trialScaled + charsBeforeTargetscaled  + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#fitted against residuals
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals", col = "grey")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)))
table(df$RT)
summary(df$RT)
sd(df$RT)
mean + 2*sd(df$RT)
mean(df$RT) + 2*sd(df$RT)
(df$RT < mean(df$RT) + 2*sd(df$RT))
df$mTurkCode[(df$RT < mean(df$RT) + 2*sd(df$RT))]
unique(df$mTurkCode[(df$RT < mean(df$RT) + 2*sd(df$RT))])
sum(unique(df$mTurkCode[(df$RT < mean(df$RT) + 2*sd(df$RT))]))
length(unique(df$mTurkCode[(df$RT < mean(df$RT) + 2*sd(df$RT))]))
(df$RT < mean(df$RT) + 2*sd(df$RT))
length(unique(df$mTurkCode[(df$RT > mean(df$RT) + 2*sd(df$RT))]))
unique(df$mTurkCode[(df$RT > mean(df$RT) + 2*sd(df$RT))])
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 2*sd(df$RT))])
df <- df %>% filter(mTurkCode %nin% outliers)
%nin%
?%in%
%in%
df <- df %>% filter(!(mTurkCode %in% outliers))
length(Df)
nrow(df)
#raw RT by metaphor
ggplot(df, aes(metaphor, RT, fill= metaphor)) + geom_boxplot(width = 0.4) +
coord_cartesian(ylim = ylim1) +
stat_summary(fun.y=mean, geom="point", shape=1, size=1, color="black", fill="black") +
geom_text(data = aggregate(RT ~ metaphor, df, median) %>% mutate(RT = round(RT,1)), aes(label = RT, y = RT), nudge_y = 3) +
geom_text(data = aggregate(RT~ metaphor, df, function(x) paste(sum(!between(x, ylim1[1], ylim1[2])), "outliers\nnot shown")),
aes(label = RT, y = 140), nudge_x = 0.25) +
geom_text(data = aggregate(RT~ metaphor, df, function(x) paste("n =", length(x))), aes(label = RT, y = 0))
ggplot(df, aes(friction, RT, fill= friction)) + geom_boxplot(width = 0.4) +
coord_cartesian(ylim = ylim1) +
facet_grid(cols = vars(metaphor)) +
stat_summary(fun.y=mean, geom="point", shape=1, size=1, color="black", fill="black") +
geom_text(data = aggregate(RT ~ metaphor*friction, df, median) %>% mutate(RT = round(RT,1)), aes(label = RT, y = RT), nudge_y = 3) +
geom_text(data = aggregate(RT~ metaphor*friction, df, function(x) paste(sum(!between(x, ylim1[1], ylim1[2])), "outliers\nnot shown")),
aes(label = RT, y = 145), nudge_x = 0, size = 3) +
geom_text(data = aggregate(RT~ friction, df, function(x) paste("n =", length(x))), aes(label = RT, y = 0))
#logged RT summary
ggplot(df, aes(metaphor, log(RT), fill = metaphor)) +  geom_boxplot(width= 0.3) +
facet_grid(cols = vars(friction))
#model fitting
m0 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m0
Anova(m0)
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
Anova(m1)
unique(df$mTurkCode[(df$RT > mean(df$RT) + 3*sd(df$RT))])
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 3*sd(df$RT))])
df <- df %>% filter(!(mTurkCode %in% outliers))
source('~/Documents/Capstone/Experiment/data/cleanup.R')
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 3*sd(df$RT))])
df <- df %>% filter(!(mTurkCode %in% outliers))
nrow(df)
#model fitting
m0 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m0
Anova(m1)
ggplot(df, aes(friction, RT, fill= friction)) + geom_boxplot(width = 0.4) +
coord_cartesian(ylim = ylim1) +
facet_grid(cols = vars(metaphor)) +
stat_summary(fun.y=mean, geom="point", shape=1, size=1, color="black", fill="black") +
geom_text(data = aggregate(RT ~ metaphor*friction, df, median) %>% mutate(RT = round(RT,1)), aes(label = RT, y = RT), nudge_y = 3) +
geom_text(data = aggregate(RT~ metaphor*friction, df, function(x) paste(sum(!between(x, ylim1[1], ylim1[2])), "outliers\nnot shown")),
aes(label = RT, y = 145), nudge_x = 0, size = 3) +
geom_text(data = aggregate(RT~ friction, df, function(x) paste("n =", length(x))), aes(label = RT, y = 0))
unique(df$mTurkCode[(df$RT > mean(df$RT) + 4*sd(df$RT))])
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 4*sd(df$RT))])
outliers
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 5*sd(df$RT))])
outliers
df <- df %>% filter(!(mTurkCode %in% outliers))
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#tests
m <- m1
summary(m)
Anova(m)
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 6*sd(df$RT))])
outliers
df <- df %>% filter(!(mTurkCode %in% outliers))
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#tests
m <- m1
summary(m)
Anova(m)
summary(m)
summary(m)
Anova(m)
cor(df$RT, fitted(m))^2
pairs(emmeans(m,c("metaphor",'friction')), by = "friction")
plot(emmeans(m, c("metaphor", "friction")), comparisons = TRUE, by = "metaphor")
pairs(emmeans(m,c("metaphor",'friction')), by = "friction")
plot_model(m, type = "eff", terms = c("friction","metaphor"), ci.lvl = 0.95, order.terms = c(3,1,2)
) + coord_cartesian(ylim = c(0,60)) + geom_line()
pairs(emmeans(m,c("metaphor",'friction')), by = "friction")
plot(emmeans(m, c("metaphor", "friction")), comparisons = TRUE, by = "metaphor")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
#RT by trial
ggplot(df, aes(trial, log(RT), fill = metaphor)) +
geom_jitter(aes(color = metaphor),alpha = 0.3,width=0.2)+
geom_smooth(method=lm)
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line")
#compare native RTs by order of presentation
ggplot(df %>% filter(friction == "Native"), aes(block, log(RT), fill = metaphor)) + geom_boxplot()
#compare RTs across blocks
ggplot(df , aes(block, RT, group = metaphor)) +
stat_summary(aes(colour = metaphor), fun.y=median, geom="line")
summary(m)
Anova(m)
#compare native RTs by order of presentation
ggplot(df %>% filter(friction == "Native"), aes(block, log(RT), fill = metaphor)) + geom_boxplot()
#compare RTs across blocks
ggplot(df , aes(block, RT, group = metaphor)) +
stat_summary(aes(colour = metaphor), fun.y=median, geom="line")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
ggplot(m) + geom_histogram(aes(.resid), bins = 30)
pairs(emmeans(m,c("metaphor",'friction')), by = "friction")
plot(emmeans(m, c("metaphor", "friction")), comparisons = TRUE, by = "metaphor")
summary(m)
Anova(m)
ggplot(df,aes(friction, RT, color = metaphor)) +
stat_summary(aes(y = RT,group=metaphor),fun.y=median, geom="line", size=1) +
stat_summary(aes(y = RT,group=metaphor),fun.y=median, geom="point", size=2) +
coord_cartesian(ylim = c(0,40))
ggplot(df,aes(metaphor, RT, color = friction)) +
stat_summary(aes(y = RT,group=friction),fun.y=median, geom="line", size=1) +
stat_summary(aes(y = RT,group=friction),fun.y=median, geom="point", size=2) +
coord_cartesian(ylim = c(0,40))
ggplot(df,aes(friction, RT, color = metaphor)) +
stat_summary(aes(y = RT,group=metaphor),fun.y=median, geom="line", size=1) +
stat_summary(aes(y = RT,group=metaphor),fun.y=median, geom="point", size=2) +
coord_cartesian(ylim = c(0,40))
#fitted against residuals
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals", col = "grey")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)))
summary(m)
Anova(m)
outliers
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 7*sd(df$RT))])
outliers
outliers
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 6*sd(df$RT))])
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 6*sd(df$RT))])
outliers
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 7*sd(df$RT))])
outliers
df <- readRDS("./cleaned.rds")
outliers <- unique(df$mTurkCode[(df$RT > mean(df$RT) + 8*sd(df$RT))])
outliers
df <- df %>% filter(!(mTurkCode %in% outliers))
m1 <- glmer(RT ~  friction*metaphor + charsBeforeTargetscaled + trialScaled + (friction|mTurkCode) + (trialScaled|mTurkCode), data = df,
family = Gamma(link = "identity"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(m)
Anova(m)
pairs(emmeans(m,c("metaphor",'friction')), by = "friction")
plot(emmeans(m, c("metaphor", "friction")), comparisons = TRUE, by = "metaphor")
#compare RTs across blocks
ggplot(df , aes(block, RT, group = metaphor)) +
stat_summary(aes(colour = metaphor), fun.y=median, geom="line")
#compare native RTs by order of presentation
ggplot(df %>% filter(friction == "Native"), aes(block, log(RT), fill = metaphor)) + geom_boxplot()
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point")
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point") +
coord_cartesian(ylim = c(0,40))
#first v last trial RTs
ggplot(df
#%>% filter(trial == 1 | trial == 6
), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point") +
coord_cartesian(ylim = c(0,40))
#first v last trial RTs
ggplot(df
#%>% filter(trial == 1 | trial == 6)
, aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point") +
coord_cartesian(ylim = c(0,40))
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point") +
coord_cartesian(ylim = c(0,40))
#first v last trial RTs
ggplot(df %>% filter(trial == 1 | trial == 6), aes(as.character(trial), RT, fill = metaphor)) +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="line") +
stat_summary(aes(group=metaphor, colour = metaphor), fun.y=median, geom="point") +
coord_cartesian(ylim = c(20,30))
